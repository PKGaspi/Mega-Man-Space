<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Asignar el número de mando a la variable al comenzar el juego
/*
global.pad = 0
gamepad_set_axis_deadzone(global.pad, .1);
var gp_num = gamepad_get_device_count();
for (var i = 0; i &lt;= gp_num; i++;)
   {
   if gamepad_is_connected(i)
        {
        global.gp[i] = true
        global.pad = i
        i = gp_num + 1
        }
        else global.gp[i] = false;
   }
*/
global.pad = 0
var gp_num = gamepad_get_device_count();
for (var i = 0; i &lt;= gp_num; i++;)
   {
   if gamepad_is_connected(i)
        {
        global.gp[i] = true
        global.pad = i
        }
        else global.gp[i] = false;
   }
gamepad_set_axis_deadzone(global.pad, .1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wsize</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>num</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>window_center()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Controles con mando básicos (solo botones)

if gamepad_button_check_pressed(global.pad, gp_padu)
   {
   keyboard_key_press(ord('W'));
   }
if gamepad_button_check_pressed(global.pad, gp_padd)
   {
   keyboard_key_press(ord('S'));
   }
if gamepad_button_check_pressed(global.pad, gp_padl)
   {
   keyboard_key_press(ord('A'));
   }
if gamepad_button_check_pressed(global.pad, gp_padr)
   {
   keyboard_key_press(ord('D'));
   }
if gamepad_button_check_pressed(global.pad, gp_face1)
   {
   keyboard_key_press(vk_space);
   }
if gamepad_button_check_pressed(global.pad, gp_face2)
   {
   keyboard_key_press(vk_space);
   }
if gamepad_button_check_pressed(global.pad, gp_face3)
   {
   keyboard_key_press(ord('M'));
   }
if gamepad_button_check_pressed(global.pad, gp_face4)
   {
   keyboard_key_press(ord('M'));
   }
if gamepad_button_check_pressed(global.pad, gp_shoulderl)
   {
   keyboard_key_press(ord('O'));
   }
if gamepad_button_check_pressed(global.pad, gp_shoulderlb)
   {
   keyboard_key_press(ord('O'));
   }
if gamepad_button_check_pressed(global.pad, gp_shoulderr)
   {
   keyboard_key_press(ord('P'));
   }
if gamepad_button_check_pressed(global.pad, gp_shoulderrb)
   {
   keyboard_key_press(ord('P'));
   }
if gamepad_button_check_pressed(global.pad, gp_start)
   {
   keyboard_key_press(vk_enter);
   }
if gamepad_button_check_pressed(global.pad, gp_select)
   {
   keyboard_key_press(vk_escape);
   }
if gamepad_button_check_pressed(global.pad, gp_stickl)
   {
   keyboard_key_press(vk_f2);
   }

    
if gamepad_button_check_released(global.pad, gp_padu)
   {
   keyboard_key_release(ord('W'));
   }
if gamepad_button_check_released(global.pad, gp_padd)
   {
   keyboard_key_release(ord('S'));
   }
if gamepad_button_check_released(global.pad, gp_padl)
   {
   keyboard_key_release(ord('A'));
   }
if gamepad_button_check_released(global.pad, gp_padr)
   {
   keyboard_key_release(ord('D'));
   }
if gamepad_button_check_released(global.pad, gp_face1)
   {
   keyboard_key_release(vk_space);
   }
if gamepad_button_check_released(global.pad, gp_face2)
   {
   keyboard_key_release(vk_space);
   }
if gamepad_button_check_released(global.pad, gp_face3)
   {
   keyboard_key_release(ord('M'));
   }
if gamepad_button_check_released(global.pad, gp_face4)
   {
   keyboard_key_release(ord('M'));
   }
if gamepad_button_check_released(global.pad, gp_shoulderl)
   {
   keyboard_key_release(ord('O'));
   }
if gamepad_button_check_released(global.pad, gp_shoulderlb)
   {
   keyboard_key_release(ord('O'));
   }
if gamepad_button_check_released(global.pad, gp_shoulderr)
   {
   keyboard_key_release(ord('P'));
   }
if gamepad_button_check_released(global.pad, gp_shoulderrb)
   {
   keyboard_key_release(ord('P'));
   }
if gamepad_button_check_released(global.pad, gp_start)
   {
   keyboard_key_release(vk_enter);
   }
if gamepad_button_check_released(global.pad, gp_select)
   {
   keyboard_key_release(vk_escape);
   }
if gamepad_button_check_released(global.pad, gp_stickl)
   {
   keyboard_key_release(vk_f2);
   }

//Controles con las flechas
if keyboard_check_pressed(vk_up)
   {
   keyboard_key_press(ord('W'));
   }
if keyboard_check_pressed(vk_down)
   {
   keyboard_key_press(ord('S'));
   }
if keyboard_check_pressed(vk_left)
   {
   keyboard_key_press(ord('A'));
   }
if keyboard_check_pressed(vk_right)
   {
   keyboard_key_press(ord('D'));
   }


if keyboard_check_released(vk_up)
   {
   keyboard_key_release(ord('W'));
   }
if keyboard_check_released(vk_down)
   {
   keyboard_key_release(ord('S'));
   }
if keyboard_check_released(vk_left)
   {
   keyboard_key_release(ord('A'));
   }
if keyboard_check_released(vk_right)
   {
   keyboard_key_release(ord('D'));
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Asignar el número de mando a la variable al enchufar un mando y soltar todas las teclas
        keyboard_key_release(ord('W'));
        keyboard_key_release(ord('S'));
        keyboard_key_release(ord('A'));
        keyboard_key_release(ord('D'));
        keyboard_key_release(ord('M'));
        keyboard_key_release(ord('O'));
        keyboard_key_release(ord('P'));
        keyboard_key_release(vk_space);
        keyboard_key_release(vk_enter);
        keyboard_key_release(vk_escape);
var gp_num = gamepad_get_device_count();
for (var i = 0; i &lt;= gp_num; i++;)
   {
   if gamepad_is_connected(i)
        {
        global.gp[i] = true
        global.pad = i
        i = gp_num + 1
        }
        else global.gp[i] = false;
   }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>draw</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_rectangle_colour(5,250,475,270,$000000,$000000,$000000,$000000,false)
draw_text(10,255,"Snapshot saved at %LOCALAPPDATA%/MegaMan_Space/Screens")
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="116">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Minimizar y fullscreen
wsize++
if (display_get_width() &lt;= wsize*480 || display_get_height() &lt;= wsize*270) {
    window_set_fullscreen(true)
    wsize = 0
}
else{
    window_set_fullscreen(false)
    window_set_size(wsize*480, wsize*270)
}
alarm_set(0,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Screenshots
num += 1
draw = 1
name = string(current_day)+"-"+string(current_month)+"-"+string(current_day)+" "+string(current_hour)+"-"+string(current_minute)+"-"+string(current_second)+" "+string(num)
screen_save(working_directory + "\Screens\MegaMan_Space_"+string(name)+".png")
alarm_set(0,90)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
